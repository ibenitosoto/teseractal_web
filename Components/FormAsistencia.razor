@using teseractal_web.Models;
@using teseractal_web.Components;
@using System.ComponentModel.DataAnnotations


<MudPaper id="@Id" Class="mt-2 mx-7 mb-7 pa-4" Elevation="10">
    <MudForm Model="@model" @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
        <MudTextField T="string" Label="Nombre" @bind-Value="model.Name" Required="true" RequiredError="Por favor rellena el nombre" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" AdornmentColor="Color.Primary" />
        <MudTextField T="string" Label="Apellido" @bind-Value="model.LastName" Required="true" RequiredError="Por favor rellena el apellido" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" AdornmentColor="Color.Primary" />
        <MudTextField T="string" Label="Email" @bind-Value="model.Email" Required="true" RequiredError="Por favor rellena el email" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Email" AdornmentColor="Color.Primary"
                      Validation="@(new EmailAddressAttribute() {ErrorMessage = "La dirección de email es inválida"})" />


        <MudSelect @bind-Value="model.SpecialMenu" Required="true" RequiredError="Por favor selecciona una opción" Class="mt-2" T="string" Label="Intolerancias - Menú especial" MultiSelection="true" @bind-SelectedValues="opcionesMenu" AdornmentIcon="@Icons.Material.Filled.Fastfood" AdornmentColor="Color.Primary">
            @foreach (var intolerancia in intolerancias)
            {
                <MudSelectItem T="string" Value="@intolerancia">@intolerancia</MudSelectItem>
            }
        </MudSelect>


        @if (isSuccessfulWriteToExcel)
        {
            <div class="d-flex align-center justify-center mt-8">
                <MudButton Variant="Variant.Filled" Color="Color.Primary">GRACIAS!</MudButton>
            </div>
        }
        else
        {
            <div class="d-flex align-center justify-center mt-8">
                <MudButton @onclick="Submit" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)">ENVIAR</MudButton>
            </div>
        }

    </MudForm>
</MudPaper>

@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;
    bool isSuccessfulWriteToExcel;

    private AttendeeModel model = new AttendeeModel();

    [Inject] ISnackbar Snackbar { get; set; }

    [Parameter] public string Id { get; set; }

    private string valueMenu { get; set; } = "Nada seleccionado";
    private IEnumerable<string> opcionesMenu { get; set; } = new HashSet<string>();

    private string[] intolerancias =
      {
        "Nada", "Lactosa", "Gluten", "Marisco", "Menú vegetariano", "Menú vegano", "Otros"
    };

    private string valueBus { get; set; } = "Nada seleccionado";
    private IEnumerable<string> opcionesBus { get; set; } = new HashSet<string>();


    private async void Submit()
    {
        //await SaveToDynamoDB();

        isSuccessfulWriteToExcel = await WriteToExcel();

        //for some reason the value is never successfull even though the power automate flow works fine
        //so we'll temporarily assign a true value to trigger the GRACIAS button
        isSuccessfulWriteToExcel = true;
        Snackbar.Add("Gracias por confirmar tu asistencia!", Severity.Success);
    }

    private async Task SaveToDynamoDB()
    {
        model.AttendeeID = Guid.NewGuid().ToString();

        // Optionally handle success/failure and show a message to the user
    }


    private async Task<bool> WriteToExcel()
    {
        string requestUrl = "https://prod-194.westeurope.logic.azure.com:443/workflows/a5eae2eec05a45a281292a5e4d1d50b8/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9JW_D3CMcEYUfqhMI_L_A4_aXWf3adrCHqLaSCzCKsc";

        // Builds the request body in JSON format string and converts it to StringContent to be read by HTTPClient
        string json = "{ " +
            "\"Nombre\" : " + "\"" + model.Name + "\"," +
            "\"Apellido\" : " + "\"" + model.LastName + "\"," +
            "\"Email\" : " + "\"" + model.Email + "\"," +
            "\"Intolerancias-Menu\" : " + "\"" + model.SpecialMenu + "\"" +
            " }";

        bool isSuccessfullRequest = HTTPrequest.SendRequest(json, requestUrl);
        if (isSuccessfullRequest)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
