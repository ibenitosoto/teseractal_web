@using teseractal_web.Models;
@using teseractal_web.Components;
@using System.ComponentModel.DataAnnotations


<MudPaper Class="mt-2 mx-7 mb-7 pa-4" Elevation="10">
    <MudForm Model="@model" @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
        <MudTextField T="string" Label="Nombre" @bind-Value="model.Name" Required="true" RequiredError="Por favor rellena el nombre" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" AdornmentColor="Color.Primary" />
        <MudTextField T="string" Label="Apellido" @bind-Value="model.LastName" Required="true" RequiredError="Por favor rellena el apellido" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" AdornmentColor="Color.Primary" />

        <MudTextField T="string" Label="Nombre acompañante (si aplica) " @bind-Value="model.NameAcompanante" Required="true" RequiredError="Por favor rellena el nombre" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" AdornmentColor="Color.Primary" />
        <MudTextField T="string" Label="Apellido acompañante (si aplica) " @bind-Value="model.LastNameAcompanante" Required="true" RequiredError="Por favor rellena el apellido" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Person" AdornmentColor="Color.Primary" />

 @*        <MudSelect @bind-Value="model.Buses" Required="true" RequiredError="Por favor selecciona una opción" Class="mt-2" T="string" Label="Autobuses" MultiSelection="true" @bind-SelectedValues="opcionesBus" AdornmentIcon="@Icons.Material.Filled.DirectionsBus" AdornmentColor="Color.Primary">
            @foreach (var bus in buses)
            {
                <MudSelectItem T="string" Value="@bus">@bus</MudSelectItem>
            }
        </MudSelect> *@

        <MudCheckBox Class="mt-6" @bind-Value="@Label_CheckBox0" Label="Bus de Hoteles a Iglesia (Campanario)" Color="Color.Dark"></MudCheckBox>
        <MudCheckBox Class="mt-6" @bind-Value="@Label_CheckBox1" Label="Bus Iglesia (Campanario) a Restaurante (Medellín)" Color="Color.Dark"></MudCheckBox>
        <MudCheckBox Class="mt-4" @bind-Value="@Label_CheckBox2" Label="Bus de vuelta a Campanario (Horarios por confirmar)" Color="Color.Dark"></MudCheckBox>


        @if (isSuccessfulWriteToExcel)
        {
            <div class="d-flex align-center justify-center mt-8">
                <MudButton Variant="Variant.Filled" Color="Color.Primary">GRACIAS!</MudButton>
            </div>
        }
        else
        {
            <div class="d-flex align-center justify-center mt-8">
                <MudButton @onclick="Submit" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)">ENVIAR</MudButton>
            </div>
        }

    </MudForm>
</MudPaper>




@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;
    bool isSuccessfulWriteToExcel;

    private AttendeeModel model = new AttendeeModel();

    [Inject] ISnackbar Snackbar { get; set; }
    private string valueMenu { get; set; } = "Nada seleccionado";
    private IEnumerable<string> opcionesMenu { get; set; } = new HashSet<string>();

    public bool Label_CheckBox0 { get; set; } = false;
    public bool Label_CheckBox1 { get; set; } = false;
    public bool Label_CheckBox2 { get; set; } = false;

    private string[] buses =
    {
        "Ninguno",
        "12:00 Medellín - 12:45 Campanario (Parque)",
        "12:30 Albergue - 12:45 Campanario (Parque)",
        "14:30 Campanario (Parque) - Quinto Cecilio (Banquete)",
        "Vuelta",
    };

    private string valueBus { get; set; } = "Nada seleccionado";
    private IEnumerable<string> opcionesBus { get; set; } = new HashSet<string>();


    private async void Submit()
    {
        //await SaveToDynamoDB();

        isSuccessfulWriteToExcel = await WriteToExcel();

        //for some reason the value is never successfull even though the power automate flow works fine
        //so we'll temporarily assign a true value to trigger the GRACIAS button
        isSuccessfulWriteToExcel = true;
        Snackbar.Add("Gracias por confirmar tu asistencia!", Severity.Success);
    }

    private async Task SaveToDynamoDB()
    {
        model.AttendeeID = Guid.NewGuid().ToString();

        // Optionally handle success/failure and show a message to the user
    }


    private async Task<bool> WriteToExcel()
    {
        AssignBusValues();

        string requestUrl = "https://prod-192.westeurope.logic.azure.com:443/workflows/2451964ea0d84f448d8e41667eb3efde/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=8WJsd93o0MUOd9-a6faLnKjnTII2wCB7yzEd-DaznKs";

        // Builds the request body in JSON format string and converts it to StringContent to be read by HTTPClient
        string json = "{ " +
            "\"Nombre\" : " + "\"" + model.Name + "\"," +
            "\"Apellido\" : " + "\"" + model.LastName + "\"," +
            "\"Nombre-Pareja\" : " + "\"" + model.NameAcompanante + "\"," +
            "\"Apellido-Pareja\" : " + "\"" + model.LastNameAcompanante + "\"," +
            "\"Autobus Hoteles - Iglesia\" : " + "\"" + model.BusHotelesAIglesia + "\"," +
            "\"Autobus Campanario - Medellin\" : " + "\"" + model.BusCampanarioMedellin + "\"," +
            "\"Autobus Medellin - Campanario\" : " + "\"" + model.BusVuelta + "\"" +
            " }";

        bool isSuccessfullRequest = HTTPrequest.SendRequest(json, requestUrl);
        if (isSuccessfullRequest)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    private void AssignBusValues()
    {
        if (Label_CheckBox0)
        {
            model.BusHotelesAIglesia = "SI";
        }
        else
        {
            model.BusHotelesAIglesia = "";
        }
        if (Label_CheckBox1)
        {
            model.BusCampanarioMedellin = "SI";
        }
        else
        {
            model.BusCampanarioMedellin = "";
        }

        if (Label_CheckBox2)
        {
            model.BusVuelta = "SI";
        }
        else
        {
            model.BusVuelta = " ";
        }
    }
}
